Terminals unused in grammar

   THEN


Grammar

    0 $accept: calc $end

    1 calc: EOL
    2     | stmt EOL
    3     | LET NAME '(' symlist ')' '{' list '}' EOL

    4 stmt: IF '(' exp ')' '{' list '}'
    5     | IF '(' exp ')' '{' list '}' ELSE '{' list '}'
    6     | WHILE '(' exp ')' '{' list '}'
    7     | DO '{' list '}' WHILE '(' exp ')'
    8     | exp

    9 list: /* empty */
   10     | stmt ';' list

   11 exp: exp CMP exp
   12    | exp '+' exp
   13    | exp '-' exp
   14    | exp '*' exp
   15    | exp '/' exp
   16    | '|' exp
   17    | '(' exp ')'
   18    | '-' exp
   19    | NUMBER
   20    | FUNC '(' explist ')'
   21    | NAME
   22    | NAME '=' exp
   23    | NAME '(' explist ')'

   24 explist: exp
   25        | exp ',' explist

   26 symlist: NAME
   27        | NAME ',' symlist


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 4 5 6 7 17 20 23
')' (41) 3 4 5 6 7 17 20 23
'*' (42) 14
'+' (43) 12
',' (44) 25 27
'-' (45) 13 18
'/' (47) 15
';' (59) 10
'=' (61) 22
'{' (123) 3 4 5 6 7
'|' (124) 16
'}' (125) 3 4 5 6 7
error (256)
NUMBER (258) 19
NAME (259) 3 21 22 23 26 27
FUNC (260) 20
EOL (261) 1 2 3
IF (262) 4 5
THEN (263)
ELSE (264) 5
WHILE (265) 6 7
DO (266) 7
LET (267) 3
CMP (268) 11
UMINUS (269)


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
calc (28)
    on left: 1 2 3, on right: 0
stmt (29)
    on left: 4 5 6 7 8, on right: 2 10
list (30)
    on left: 9 10, on right: 3 4 5 6 7 10
exp (31)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22 23, on right: 4 5
    6 7 8 11 12 13 14 15 16 17 18 22 24 25
explist (32)
    on left: 24 25, on right: 20 23 25
symlist (33)
    on left: 26 27, on right: 3 27


State 0

    0 $accept: . calc $end

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    EOL     shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    DO      shift, and go to state 7
    LET     shift, and go to state 8
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    calc  go to state 12
    stmt  go to state 13
    exp   go to state 14


State 1

   19 exp: NUMBER .

    $default  reduce using rule 19 (exp)


State 2

   21 exp: NAME .
   22    | NAME . '=' exp
   23    | NAME . '(' explist ')'

    '='  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 21 (exp)


State 3

   20 exp: FUNC . '(' explist ')'

    '('  shift, and go to state 17


State 4

    1 calc: EOL .

    $default  reduce using rule 1 (calc)


State 5

    4 stmt: IF . '(' exp ')' '{' list '}'
    5     | IF . '(' exp ')' '{' list '}' ELSE '{' list '}'

    '('  shift, and go to state 18


State 6

    6 stmt: WHILE . '(' exp ')' '{' list '}'

    '('  shift, and go to state 19


State 7

    7 stmt: DO . '{' list '}' WHILE '(' exp ')'

    '{'  shift, and go to state 20


State 8

    3 calc: LET . NAME '(' symlist ')' '{' list '}' EOL

    NAME  shift, and go to state 21


State 9

   18 exp: '-' . exp

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp  go to state 22


State 10

   16 exp: '|' . exp

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp  go to state 23


State 11

   17 exp: '(' . exp ')'

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp  go to state 24


State 12

    0 $accept: calc . $end

    $end  shift, and go to state 25


State 13

    2 calc: stmt . EOL

    EOL  shift, and go to state 26


State 14

    8 stmt: exp .
   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp

    CMP  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 8 (stmt)


State 15

   22 exp: NAME '=' . exp

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp  go to state 32


State 16

   23 exp: NAME '(' . explist ')'

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp      go to state 33
    explist  go to state 34


State 17

   20 exp: FUNC '(' . explist ')'

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp      go to state 33
    explist  go to state 35


State 18

    4 stmt: IF '(' . exp ')' '{' list '}'
    5     | IF '(' . exp ')' '{' list '}' ELSE '{' list '}'

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp  go to state 36


State 19

    6 stmt: WHILE '(' . exp ')' '{' list '}'

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp  go to state 37


State 20

    7 stmt: DO '{' . list '}' WHILE '(' exp ')'

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    DO      shift, and go to state 7
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 9 (list)

    stmt  go to state 38
    list  go to state 39
    exp   go to state 14


State 21

    3 calc: LET NAME . '(' symlist ')' '{' list '}' EOL

    '('  shift, and go to state 40


State 22

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp
   18    | '-' exp .

    $default  reduce using rule 18 (exp)


State 23

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp
   16    | '|' exp .

    $default  reduce using rule 16 (exp)


State 24

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp
   17    | '(' exp . ')'

    CMP  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ')'  shift, and go to state 41


State 25

    0 $accept: calc $end .

    $default  accept


State 26

    2 calc: stmt EOL .

    $default  reduce using rule 2 (calc)


State 27

   11 exp: exp CMP . exp

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp  go to state 42


State 28

   12 exp: exp '+' . exp

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp  go to state 43


State 29

   13 exp: exp '-' . exp

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp  go to state 44


State 30

   14 exp: exp '*' . exp

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp  go to state 45


State 31

   15 exp: exp '/' . exp

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp  go to state 46


State 32

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp
   22    | NAME '=' exp .

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 22 (exp)


State 33

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp
   24 explist: exp .
   25        | exp . ',' explist

    CMP  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ','  shift, and go to state 47

    $default  reduce using rule 24 (explist)


State 34

   23 exp: NAME '(' explist . ')'

    ')'  shift, and go to state 48


State 35

   20 exp: FUNC '(' explist . ')'

    ')'  shift, and go to state 49


State 36

    4 stmt: IF '(' exp . ')' '{' list '}'
    5     | IF '(' exp . ')' '{' list '}' ELSE '{' list '}'
   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp

    CMP  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ')'  shift, and go to state 50


State 37

    6 stmt: WHILE '(' exp . ')' '{' list '}'
   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp

    CMP  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ')'  shift, and go to state 51


State 38

   10 list: stmt . ';' list

    ';'  shift, and go to state 52


State 39

    7 stmt: DO '{' list . '}' WHILE '(' exp ')'

    '}'  shift, and go to state 53


State 40

    3 calc: LET NAME '(' . symlist ')' '{' list '}' EOL

    NAME  shift, and go to state 54

    symlist  go to state 55


State 41

   17 exp: '(' exp ')' .

    $default  reduce using rule 17 (exp)


State 42

   11 exp: exp . CMP exp
   11    | exp CMP exp .
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    CMP  error (nonassociative)

    $default  reduce using rule 11 (exp)


State 43

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   12    | exp '+' exp .
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 12 (exp)


State 44

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   13    | exp '-' exp .
   14    | exp . '*' exp
   15    | exp . '/' exp

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 13 (exp)


State 45

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   14    | exp '*' exp .
   15    | exp . '/' exp

    $default  reduce using rule 14 (exp)


State 46

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp
   15    | exp '/' exp .

    $default  reduce using rule 15 (exp)


State 47

   25 explist: exp ',' . explist

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp      go to state 33
    explist  go to state 56


State 48

   23 exp: NAME '(' explist ')' .

    $default  reduce using rule 23 (exp)


State 49

   20 exp: FUNC '(' explist ')' .

    $default  reduce using rule 20 (exp)


State 50

    4 stmt: IF '(' exp ')' . '{' list '}'
    5     | IF '(' exp ')' . '{' list '}' ELSE '{' list '}'

    '{'  shift, and go to state 57


State 51

    6 stmt: WHILE '(' exp ')' . '{' list '}'

    '{'  shift, and go to state 58


State 52

   10 list: stmt ';' . list

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    DO      shift, and go to state 7
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 9 (list)

    stmt  go to state 38
    list  go to state 59
    exp   go to state 14


State 53

    7 stmt: DO '{' list '}' . WHILE '(' exp ')'

    WHILE  shift, and go to state 60


State 54

   26 symlist: NAME .
   27        | NAME . ',' symlist

    ','  shift, and go to state 61

    $default  reduce using rule 26 (symlist)


State 55

    3 calc: LET NAME '(' symlist . ')' '{' list '}' EOL

    ')'  shift, and go to state 62


State 56

   25 explist: exp ',' explist .

    $default  reduce using rule 25 (explist)


State 57

    4 stmt: IF '(' exp ')' '{' . list '}'
    5     | IF '(' exp ')' '{' . list '}' ELSE '{' list '}'

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    DO      shift, and go to state 7
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 9 (list)

    stmt  go to state 38
    list  go to state 63
    exp   go to state 14


State 58

    6 stmt: WHILE '(' exp ')' '{' . list '}'

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    DO      shift, and go to state 7
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 9 (list)

    stmt  go to state 38
    list  go to state 64
    exp   go to state 14


State 59

   10 list: stmt ';' list .

    $default  reduce using rule 10 (list)


State 60

    7 stmt: DO '{' list '}' WHILE . '(' exp ')'

    '('  shift, and go to state 65


State 61

   27 symlist: NAME ',' . symlist

    NAME  shift, and go to state 54

    symlist  go to state 66


State 62

    3 calc: LET NAME '(' symlist ')' . '{' list '}' EOL

    '{'  shift, and go to state 67


State 63

    4 stmt: IF '(' exp ')' '{' list . '}'
    5     | IF '(' exp ')' '{' list . '}' ELSE '{' list '}'

    '}'  shift, and go to state 68


State 64

    6 stmt: WHILE '(' exp ')' '{' list . '}'

    '}'  shift, and go to state 69


State 65

    7 stmt: DO '{' list '}' WHILE '(' . exp ')'

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    exp  go to state 70


State 66

   27 symlist: NAME ',' symlist .

    $default  reduce using rule 27 (symlist)


State 67

    3 calc: LET NAME '(' symlist ')' '{' . list '}' EOL

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    DO      shift, and go to state 7
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 9 (list)

    stmt  go to state 38
    list  go to state 71
    exp   go to state 14


State 68

    4 stmt: IF '(' exp ')' '{' list '}' .
    5     | IF '(' exp ')' '{' list '}' . ELSE '{' list '}'

    ELSE  shift, and go to state 72

    $default  reduce using rule 4 (stmt)


State 69

    6 stmt: WHILE '(' exp ')' '{' list '}' .

    $default  reduce using rule 6 (stmt)


State 70

    7 stmt: DO '{' list '}' WHILE '(' exp . ')'
   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp

    CMP  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ')'  shift, and go to state 73


State 71

    3 calc: LET NAME '(' symlist ')' '{' list . '}' EOL

    '}'  shift, and go to state 74


State 72

    5 stmt: IF '(' exp ')' '{' list '}' ELSE . '{' list '}'

    '{'  shift, and go to state 75


State 73

    7 stmt: DO '{' list '}' WHILE '(' exp ')' .

    $default  reduce using rule 7 (stmt)


State 74

    3 calc: LET NAME '(' symlist ')' '{' list '}' . EOL

    EOL  shift, and go to state 76


State 75

    5 stmt: IF '(' exp ')' '{' list '}' ELSE '{' . list '}'

    NUMBER  shift, and go to state 1
    NAME    shift, and go to state 2
    FUNC    shift, and go to state 3
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    DO      shift, and go to state 7
    '-'     shift, and go to state 9
    '|'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 9 (list)

    stmt  go to state 38
    list  go to state 77
    exp   go to state 14


State 76

    3 calc: LET NAME '(' symlist ')' '{' list '}' EOL .

    $default  reduce using rule 3 (calc)


State 77

    5 stmt: IF '(' exp ')' '{' list '}' ELSE '{' list . '}'

    '}'  shift, and go to state 78


State 78

    5 stmt: IF '(' exp ')' '{' list '}' ELSE '{' list '}' .

    $default  reduce using rule 5 (stmt)

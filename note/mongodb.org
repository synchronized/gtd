* Linux
** 安装
参考：[[https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/][官方文档]] 
- 拷贝mongodb-org-3.2.repo 文件到服务器 /etc/yum.repos.d/目录
- 安装mongodb-org 包
#+BEGIN_SRC shell
sudo yum install -y mongodb-org
#+END_SRC

* Windows
#+BEGIN_SRC shell
sc create MongoDB binPath= "C:\Program Files\MongoDB\Server\3.2\bin\mongod.exe --service --config=D:\MongoDB\etc\mongo.conf" 
#+END_SRC

* 维护
** 创建用户
#+BEGIN_SRC javascript
use admin
db.createUser({user:"root",pwd:"<password>",roles:[{"role":"userAdminAnyDatabase","db":"admin"}]})  
db.auth("root","<password>")
db.createUser({user:"mongouser",pwd:"<password>",roles:[{"role":"readWriteAnyDatabase","db":"admin"}, {"role":"dbAdminAnyDatabase","db":"admin"}, {"role":"restore","db":"admin"}]})  

db.updateUser("mongouser", {roles:[{"role":"readWriteAnyDatabase","db":"admin"}, {"role":"dbAdminAnyDatabase","db":"admin"}]})  

db.updateUser("mongouser", {pwd: "<password>"})
#+END_SRC


** 数据库备份(单库)
#+BEGIN_SRC shell
mongodump --host localhost --port 27017  --gzip --archive=archive.tar.gz --db=Japanese_Center
#+END_SRC

** 数据库还原(单库)
#+BEGIN_SRC shell
mongorestore --host localhost --port 27017 --gzip --archive=Japanese_Center.tar.gz --db=Japanese_Center
#+END_SRC

** 数据库备份(全库)
#+BEGIN_SRC shell
mongodump --host localhost --port 27017 --gzip --archive=archive.tar.gz
#+END_SRC

** 数据库还原(全库)
#+BEGIN_SRC shell
mongorestore --host localhost --port 27017 --gzip --archive=archive.tar.gz
#+END_SRC

** 数据库还原(全库，插入前删除)
#+BEGIN_SRC shell
mongorestore --host localhost --port 27017 --drop --gzip --archive=archive.tar.gz
#+END_SRC

** 导出
#+BEGIN_SRC shell
mongoexport -d GameLog -c PlayerConsume -q "{_id: {'$gt': ObjectId('5bd1e8800000000000000000'), '$lt': ObjectId('5bdf177f0000000000000000')}}" --type=csv --fields _id,Account,PlayerLevel,ResType,ResID,Count,SystemID,ActionID --out PlayerConsume.csv 
mongoexport -d GameLog -c PlayerConsume -q '{ "_id" : ObjectId("5b18c3d79103fc406873e992")}' --type=csv --out PlayerConsume.csv  --fields _id,Account,PlayerLevel,ResType,ResID,Count,SystemID,ActionID
mongoexport -d GameLog -c PlayerConsume -q "{ '_id' : ObjectId('5b18c3d79103fc406873e992')}" --type=csv --out PlayerConsume.csv  --fields _id,Account,PlayerLevel,ResType,ResID,Count,SystemID,ActionID
#+END_SRC
** slave报错
#+BEGIN_SRC javascript
error: { "$err" : "not master and slaveok=false", "code" : 13435 }
#+END_SRC
解决办法:
#+BEGIN_SRC javascript
db.getMongo().setSlaveOk();
#+END_SRC

* ObjectId
** 时间和ObjectId转换
#+BEGIN_SRC javascript
var startTime = Date.parse("2018-10-26 00:00:00");
var endTime = Date.parse("2018-11-04 23:59:59");

var objectIdFromDate = function (date) {
	return Math.floor(date.getTime() / 1000).toString(16) + "0000000000000000";
};
var dateFromObjectId = function (objectId) {
	return new Date(parseInt(objectId.substring(0, 8), 16) * 1000);
};
var startObjectId = objectIdFromDate(new Date(startTime));
var endObjectId = objectIdFromDate(new Date(endTime));

objectIdFromDate(new Date(Date.parse("2018-10-27 00:00:00")));
#+END_SRC

* 常用
** 对集合条数排序
#+BEGIN_SRC javascript
var collectionNames = db.getCollectionNames(), stats = [];
collectionNames.forEach(function (n) {
  var item = {stat: db[n].stats(), name: n};
  stats.push(item);
});
stats = stats.sort(function(a, b) {
  return b['stat']['size'] - a['stat']['size'];
});
stats = stats.slice(0, 15); //前15名(大小倒序)
var result = [];
for (var c in stats) {
  var item = stats[c];
  var avai = item['stat']['wiredTiger']['block-manager']['file bytes available for reuse'];
  var storageSize = item['stat']['storageSize'];
  var totalIndexSize = item['stat']['totalIndexSize'];
  result.push({
    'ns':  item['stat']['ns'],
    'size':  item['stat']['size'],
    'avai': avai,
    'storageSize': storageSize,
    'totalIndexSize': totalIndexSize,
  })
}
result
print("-------------- id format --------------");
for (var s in stats) {
  var item = stats[s];
  var listData = db[item['name']].find({}, {_id:1}).limit(1).toArray();
  if (listData.length <= 0) {
    continue;
  }
  listData[0]['name'] = item['name'];
  printjson(listData[0]);
}
#+END_SRC

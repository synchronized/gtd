** 安装 Maven

安装 Maven，访问 [[http://maven.apache.org/download.cgi][Maven]] 下载页，然后按照安装指南的步骤即可。总结一下，你需要做：
1. 下载并解压 Maven；
2. 将环境变量 M2_HOME 设置为解压后的目录；
3. 将 M2 环境变量设置为 M2_HOME/bin（在 Windows 上是%M2_HOME%/bin，在 Unix 上是$M2_HOME/bin）；

** 相关资料
[[http://maven.apache.org/guides/mini/guide-configuring-maven.html][guide-configuring-maven]]
[[http://juvenshun.iteye.com/blog/359256][Maven 最佳实践：Maven 仓库]]
[[https://www.puritys.me/zh_cn/docs-blog/article-403-%E4%BD%BF%E7%94%A8-Docker-%E6%89%A7%E8%A1%8C-Maven---mvn-compile.html][使用 Docker 执行 Maven - mvn compile]]
[[http://blog.csdn.net/top_code/article/details/51066564][常用的 maven 命令]]

** 关于使用中遇到的问题
- 关于 generate 和 create 的不同  
[[https://stackoverflow.com/questions/5209343/whats-the-difference-between-mvn-archetypegenerate-and-mvn-archetypecreate][What's the difference between mvn archetype:generate and mvn archetype:create]]
- 国内的 maven 镜像仓库  
参考[[http://www.jianshu.com/p/4d5bb95b56c5][maven 亲测可用国内镜像阿里云]]
修改 maven 根目录下的 conf 文件夹中的 setting.xml 文件，内容如下：
#+BEGIN_SRC xml
<mirrors>
    <mirror>
      <id>alimaven</id>
      <name>aliyun maven</name>
      <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
      <mirrorOf>central</mirrorOf>        
    </mirror>
  </mirrors>
#+END_SRC
- 关于每次编译项目重复下载 jar 的问题  
1.加上-o(--offline)  
2.或者修改 maven 根目录下的 conf 文件夹中的 setting.xml 文件，内容如下:
#+BEGIN_SRC xml
<offline>true</offline>
#+END_SRC

** create web Application

#+BEGIN_SRC shell
mvn archetype:create \
  -DgroupId=[your project's group id] \
  -DartifactId=[your project's artifact id] \
  -DarchetypeArtifactId=maven-archetype-webapp
#+END_SRC

** create java project
#+BEGIN_SRC shell
mvn -B archetype:generate \
  -DgroupId=[your project's group id] \
  -DartifactId=[your project's artifact id] \
  -DarchetypeGroupId=org.apache.maven.archetypes 
#+END_SRC

** copy jar 文件
#+BEGIN_SRC shell
mvn dependency:copy-dependencies -DoutputDirectory=lib
#+END_SRC

** 其他常用命令
1. 编译源代码
#+BEGIN_SRC shell
mvn compile
#+END_SRC

2. 编译测试代码
#+BEGIN_SRC shell
mvn test-compile
#+END_SRC

3. 运行测试代码
#+BEGIN_SRC shell
mvn test
#+END_SRC

4. 打包
#+BEGIN_SRC shell
mvn package
#+END_SRC

5. 打包但跳过测试
#+BEGIN_SRC shell
mvn package -Dmaven.test.skip=true
#+END_SRC

6. 在本地 Repository 中安装
#+BEGIN_SRC shell
mvn install
#+END_SRC

7. 同理，跳过单元测试
#+BEGIN_SRC shell
mvn install -Dmaven.test.skip=true
#+END_SRC

8. 发布 maven 私服
#+BEGIN_SRC shell
mvn deploy
#+END_SRC

9. 清除产生的项目
#+BEGIN_SRC shell
mvn clean
#+END_SRC

10. 生成 eclipse 项目
#+BEGIN_SRC shell
mvn eclipse:eclipse
#+END_SRC

11. 生成 idea 项目
#+BEGIN_SRC shell
mvn idea:idea
#+END_SRC

12. 清除 eclipse 的一些系统设置
#+BEGIN_SRC shell
mvn eclipse:clean
#+END_SRC

13. 先删除再编译
#+BEGIN_SRC shell
mvn clean compile
#+END_SRC

当然也可以搭配 package，install 等命令一起使用。
